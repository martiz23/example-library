{"version":3,"file":"ngx-custom-lib.mjs","sources":["../../../projects/ngx-custom-lib/src/lib/models/response.ts","../../../projects/ngx-custom-lib/src/lib/utils/error-notification.util.ts","../../../projects/ngx-custom-lib/src/lib/utils/getKey.ts","../../../projects/ngx-custom-lib/src/public-api.ts","../../../projects/ngx-custom-lib/src/ngx-custom-lib.ts"],"sourcesContent":["export enum ResponseErrorType {\n  UnmetCondition = \"UnmetCondition\",\n  InvalidOperation = \"InvalidOperation\",\n  EmptyResult = \"EmptyResult\",\n  EntityNotFound = \"EntityNotFound\",\n  ResourceProblem = \"ResourceProblem\",\n  UnknownProblem = \"UnknownProblem\",\n  ExternalServiceProblem = \"ExternalServiceProblem\",\n}\n\nexport class myResponse<T> {\n  status: boolean;\n  error_type?: ResponseErrorType;\n  status_code?: number;\n  data?: T | undefined;\n  message?: string;\n  pagination?: pagination;\n\n  constructor(\n    status = false,\n    status_code = 500,\n    message = \"Ocurrió un error inesperado\",\n    data: T | undefined,\n    error_type = ResponseErrorType.UnknownProblem,\n  ) {\n    this.status = status;\n    this.error_type = error_type;\n    this.status_code = status_code;\n    this.message = message;\n    this.data = data;\n    this.pagination = new pagination();\n  }\n}\n\nexport class pagination {\n  total: number;\n  page_count: number;\n  current_page: number;\n  per_page: number;\n  from: number;\n  to: number;\n\n  constructor() {\n    this.total = 0;\n    this.page_count = 0;\n    this.current_page = 0;\n    this.per_page = 0;\n    this.from = 0;\n    this.to = 0;\n  }\n}\n","import Swal, { SweetAlertOptions } from \"sweetalert2\";\nimport { ResponseErrorType, myResponse } from \"../models/response\";\n\n/**\n *\n * @param resp Response with status in false.\n * @param title\n */\nexport function showError(resp: myResponse<any>, title?: string, isToast?: boolean) {\n  const options: SweetAlertOptions = { showConfirmButton: true, confirmButtonColor: \"#468cbb\" };\n\n  if (typeof resp.status != \"boolean\") {\n    resp = {\n      message: \"\",\n      status: false,\n      status_code: 0,\n    };\n  }\n\n  // Message\n  if (resp.message && resp.message?.length > 0) {\n    options.text = Array.isArray(resp.message) ? resp.message.join(\". \") : resp.message;\n  } else {\n    options.text = \"Ocurrió un error inesperado\";\n  }\n\n  //Tittle\n  if (resp.status_code == 0) {\n    options.title = \"Se ha perdido la conexión con el servidor\";\n    options.icon = \"error\";\n    options.text =\n      \"Se ha producido un error de conexión, esto puede ser debido a una mala conexión o que el servidor no se encuentra disponible por el momento.\";\n  } else if (resp.status_code == 419) {\n    options.title = \"Vuelve a iniciar sesión\";\n    options.icon = \"info\";\n  } else if (resp.error_type == ResponseErrorType.EmptyResult || resp.status_code == 201) {\n    options.title = title ? title : \"Respuesta vacía\";\n    options.icon = \"info\";\n  } else {\n    if (!title && Array.isArray(resp.data)) {\n      title = \"Hubo un problema al cargar registros\";\n    }\n\n    switch (resp.error_type) {\n      case \"UnmetCondition\":\n        options.title = title ? title : \"Problema en la validación\";\n        options.icon = \"warning\";\n        break;\n      case \"InvalidOperation\":\n        options.title = title ? title : \"No se puede realizar la acción\";\n        options.icon = \"warning\";\n        break;\n      case \"EntityNotFound\":\n        options.title = title ? title : \"Registro no encontrado\";\n        options.icon = \"warning\";\n        break;\n      default:\n        if (resp.status_code && resp.status_code < 500) {\n          options.title = title ? title : \"No se pudo completar la acción\";\n          options.icon = \"warning\";\n        } else {\n          options.title = title ? title : \"Error\";\n          options.icon = \"error\";\n        }\n    }\n  }\n\n  if (isToast) {\n    Swal.fire({ toast: true, position: \"bottom-right\", timer: 10000, ...options });\n  } else {\n    Swal.fire(options);\n  }\n}\n","/**\n * Returns a key in a enum given a value.\n * @param value\n * @param enum\n * @returns key\n */\nexport function getKeyInEnum(value: string, enu: any): string | undefined {\n  return Object.keys(enu).find((k) => enu[k] === value);\n}\n","/*\r\n * Public API Surface of ngx-custom-lib\r\n */\r\n\r\nexport * from './lib/utils/error-notification.util';\r\nexport * from './lib/utils/index';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}